if 1
{
if true
{
a = b
}
else
{
c=@pFoo
}
}

if test
	{ something }
else
{ 
	test
}

        123+123; 
 123.456+123.456
n2=123+123
n2=123<123
n2= 123<123
a =   b
a =  b&&c
a=b  ||  c
testthing proc(n:int)->int { ; }
pFoo-> m_a
pFoo . m_b
aN [ 12 ]
testthing ( 1 )

Enk flag_enum {Ack, Foo=2, Bar }
//g_test/*wtf*/: int
/*
g_woo: s8
g_c   
: & test
//if a {b = c}
SFoo struct { m_n  : s8 }
n2: int=1+2
n:int=1+2*3&&true 
n=123-2
//SFoo struct ($N :int,  :$T) { m_n: s8 }
//Partdef typedef SFoo($C, :$part)

//ppFoo typedef &SFoo
//Enk flag_enum {Ack, Foo, Bar }
//a = b ;
//b = c

*/